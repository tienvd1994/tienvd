<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BranchRegister" xml:space="preserve">
    <value>Branch Register</value>
  </data>
  <data name="ButtonSend" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Buy" xml:space="preserve">
    <value>Buy product</value>
  </data>
  <data name="CateProduct_Label" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="ClaimContact" xml:space="preserve">
    <value>Claim</value>
  </data>
  <data name="CombineContact" xml:space="preserve">
    <value>Colaborative</value>
  </data>
  <data name="CommentContact" xml:space="preserve">
    <value>If you are interested in these products, our services, fill out the email to contact us ...</value>
  </data>
  <data name="CompanyCategory" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="CompanyCode" xml:space="preserve">
    <value>Với chiến lược kinh doanh vì  lợi ích công cộng, chúng tôi hiểu việc không ngừng nghiên cứu và cải tiến công nghệ sẽ là chìa khóa quan trọng nhất trong tiến trình phát triển bền vững</value>
  </data>
  <data name="ConstructionCode" xml:space="preserve">
    <value>Constructions</value>
  </data>
  <data name="ContactAdd" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ContactCode" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="ContactCompany" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="ContactContent" xml:space="preserve">
    <value>Content request</value>
  </data>
  <data name="ContactThank" xml:space="preserve">
    <value>Thank you used to our product. We will contact to you when we receive information</value>
  </data>
  <data name="EventCategory" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="FormContact" xml:space="preserve">
    <value>Contact Form</value>
  </data>
  <data name="Fullname" xml:space="preserve">
    <value>Fullname</value>
  </data>
  <data name="HomeCode" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HumanCategory" xml:space="preserve">
    <value>Human</value>
  </data>
  <data name="ICompanyCode" xml:space="preserve">
    <value>/Introduction/about-us</value>
  </data>
  <data name="IHumanCode" xml:space="preserve">
    <value>/Introduction/human</value>
  </data>
  <data name="ImageCode" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="IntroductionCode" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="LineOneBanner" xml:space="preserve">
    <value>We endeavor to change the world through the development of solutions &lt;br /&gt;Tech products help working, learning and entertainment smarter</value>
  </data>
  <data name="LinkEvent" xml:space="preserve">
    <value>tin-su-kien</value>
  </data>
  <data name="LinkNew" xml:space="preserve">
    <value>tin-moi</value>
  </data>
  <data name="ListContact" xml:space="preserve">
    <value>List contacts</value>
  </data>
  <data name="Mail" xml:space="preserve">
    <value>Mail</value>
  </data>
  <data name="NameCompany" xml:space="preserve">
    <value>Công Ty Cổ Phần ĐầuTư Xây Dựng &amp; &lt;/br&gt;Tư Vấn FCN Build</value>
  </data>
  <data name="NewCategory" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="NewCode" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="NewPaper" xml:space="preserve">
    <value>Posts</value>
  </data>
  <data name="NewReceive" xml:space="preserve">
    <value>New Receive</value>
  </data>
  <data name="NewsLastest_Label" xml:space="preserve">
    <value>Latest News</value>
  </data>
  <data name="PartnerCode" xml:space="preserve">
    <value>Partner</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="ProductCode" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Anwser, question</value>
  </data>
  <data name="ReceiveInbox" xml:space="preserve">
    <value>Receiving new letter</value>
  </data>
  <data name="RecruitmentCode" xml:space="preserve">
    <value>Recruitments</value>
  </data>
  <data name="Requirement" xml:space="preserve">
    <value>Requirement</value>
  </data>
  <data name="Search_Label" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Sendmail" xml:space="preserve">
    <value>Send mail is success</value>
  </data>
  <data name="SendMessage_Label" xml:space="preserve">
    <value>Send message</value>
  </data>
  <data name="ServiceCode" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="ServiceSpecial" xml:space="preserve">
    <value>Special Service</value>
  </data>
  <data name="Sologan" xml:space="preserve">
    <value>&lt;div class="caption-text"&gt;&lt;i class="icon icon-chevron-circle-right"&gt;&lt;/i&gt; We provider  overall solution&lt;/div&gt;
                    &lt;div class="caption-text" &gt;&lt;i class="icon icon-chevron-circle-right"&gt;&lt;/i&gt; Benefit to the customer&lt;/div&gt;
                    &lt;div class="caption-text" &gt;&lt;i class="icon icon-chevron-circle-right"&gt;&lt;/i&gt; Diffirent technology&lt;/div&gt;
                    &lt;div class="caption-text" &gt;&lt;i class="icon icon-chevron-circle-right"&gt;&lt;/i&gt; Professional of business proccess&lt;/div&gt;
                    &lt;div class="caption-text"&gt;&lt;i class="icon icon-chevron-circle-right"&gt;&lt;/i&gt;  Implementation of large projects&lt;/div&gt;
                    &lt;div class="caption-text"&gt;&lt;i class="icon icon-chevron-circle-right"&gt;&lt;/i&gt; Always aim to satisfy demand&lt;br /&gt;to customer&lt;/div&gt;</value>
  </data>
  <data name="Sologan1" xml:space="preserve">
    <value>&lt;div class="caption-text"&gt;"Innovative, optimized every detail, every resource,&lt;br /&gt;professional services help our differences"&lt;/div&gt;&lt;br /&gt;
                    &lt;div class="caption-text"&gt;"Meet customer needs with new technology&lt;br /&gt;and outstanding"&lt;/div&gt;</value>
  </data>
  <data name="Solutions_Label" xml:space="preserve">
    <value>Solutions</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time Sending</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="TypeContact" xml:space="preserve">
    <value>Contact Type</value>
  </data>
  <data name="ValueCode" xml:space="preserve">
    <value>&lt;h2 class="short word-rotator-title"&gt;
               The core value of our
                &lt;strong class="inverted"&gt;
                    &lt;span style="height: 54px;" class="word-rotate active"&gt;
                        &lt;span style="top: -107.347px;" class="word-rotate-items"&gt;
                            &lt;span&gt;Effective&lt;/span&gt;
                            &lt;span&gt;Active&lt;/span&gt;
                            &lt;span&gt;System&lt;/span&gt;
                            &lt;span&gt;Process&lt;/span&gt;
                            &lt;span&gt;Agile&lt;/span&gt;
                            &lt;span&gt;Closely&lt;/span&gt;
                        &lt;/span&gt;
                    &lt;/span&gt;
                &lt;/strong&gt;
            &lt;/h2&gt;</value>
  </data>
  <data name="SocialNetwork_Label" xml:space="preserve">
    <value>Social network</value>
  </data>
  <data name="CateNewsOther_Label" xml:space="preserve">
    <value>More category news</value>
  </data>
  <data name="CateSolutionsOther_Label" xml:space="preserve">
    <value>More categories</value>
  </data>
  <data name="ContactInfo_Label" xml:space="preserve">
    <value>Contact details</value>
  </data>
  <data name="ContactUs_Label" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="Description_Product" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="MorePosts_Label" xml:space="preserve">
    <value>More posts</value>
  </data>
  <data name="PostedBy_Label" xml:space="preserve">
    <value>Posted by</value>
  </data>
  <data name="RelatedProducts_Label" xml:space="preserve">
    <value>Related products</value>
  </data>
  <data name="ShowHomePage_Label" xml:space="preserve">
    <value>Show home page</value>
  </data>
  <data name="ViewAll_Label" xml:space="preserve">
    <value>View all</value>
  </data>
</root>